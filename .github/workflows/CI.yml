name: CI
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - style
      - build
      - test
      - doc
      - lint
      - fuzz
    steps:
      - run: exit 0

  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    name: Build
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - "1.57"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p h3

  test:
    name: Test ${{ matrix.rust }}
    needs: [style]
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - "1.57"

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  doc:
    name: Build docs
    needs: [style, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: rustdoc
          args: -p h3 -- -D intra-doc-link-resolution-failure

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  fuzz:
    name: Fuzz test
    needs: [style, test]
    strategy:
      matrix:
        rust:
          - nightly

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: install cargo-fuzz
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-fuzz

      - name: Fuzz
        uses: actions-rs/cargo@v1
        with:
          command: +nightly
          args: fuzz run fuzz_varint -- -runs=1

  compliance:
    name: Check spec compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Generate report
        uses: ./.github/actions/compliance
        with:
          extract-script: ${{ github.workspace }}/ci/compliance/extract.sh
          report-script: ${{ github.workspace }}/ci/compliance/report.sh
