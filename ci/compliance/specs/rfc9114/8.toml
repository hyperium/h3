target = "ci/compliance/specs/rfc9114.txt#8"

# 8.  Error Handling
#
# When a stream cannot be completed successfully, QUIC allows the
# application to abruptly terminate (reset) that stream and communicate
# a reason; see Section 2.4 of [QUIC-TRANSPORT].  This is referred to
# as a "stream error".  An HTTP/3 implementation can decide to close a
# QUIC stream and communicate the type of error.  Wire encodings of
# error codes are defined in Section 8.1.  Stream errors are distinct
# from HTTP status codes that indicate error conditions.  Stream errors
# indicate that the sender did not transfer or consume the full request
# or response, while HTTP status codes indicate the result of a request
# that was successfully received.
# 
# If an entire connection needs to be terminated, QUIC similarly
# provides mechanisms to communicate a reason; see Section 5.3 of
# [QUIC-TRANSPORT].  This is referred to as a "connection error".
# Similar to stream errors, an HTTP/3 implementation can terminate a
# QUIC connection and communicate the reason using an error code from
# Section 8.1.
# 
# Although the reasons for closing streams and connections are called
# "errors", these actions do not necessarily indicate a problem with
# the connection or either implementation.  For example, a stream can
# be reset if the requested resource is no longer needed.
# 
# An endpoint MAY choose to treat a stream error as a connection error
# under certain circumstances, closing the entire connection in
# response to a condition on a single stream.  Implementations need to
# consider the impact on outstanding requests before making this
# choice.
# 
# Because new error codes can be defined without negotiation (see
# Section 9), use of an error code in an unexpected context or receipt
# of an unknown error code MUST be treated as equivalent to
# H3_NO_ERROR.  However, closing a stream can have other effects
# regardless of the error code; for example, see Section 4.1.

[[spec]]
level = "MAY"
quote = '''
An endpoint MAY choose to treat a stream error as a connection error
under certain circumstances, closing the entire connection in
response to a condition on a single stream.
'''

[[spec]]
level = "MUST"
quote = '''
Because new error codes can be defined without negotiation (see
Section 9), use of an error code in an unexpected context or receipt
of an unknown error code MUST be treated as equivalent to
H3_NO_ERROR.
'''

