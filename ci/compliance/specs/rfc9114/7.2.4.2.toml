target = "ci/compliance/specs/rfc9114.txt#7.2.4.2"

# 7.2.4.2.  Initialization
#
# An HTTP implementation MUST NOT send frames or requests that would be
# invalid based on its current understanding of the peer's settings.
# 
# All settings begin at an initial value.  Each endpoint SHOULD use
# these initial values to send messages before the peer's SETTINGS
# frame has arrived, as packets carrying the settings can be lost or
# delayed.  When the SETTINGS frame arrives, any settings are changed
# to their new values.
# 
# This removes the need to wait for the SETTINGS frame before sending
# messages.  Endpoints MUST NOT require any data to be received from
# the peer prior to sending the SETTINGS frame; settings MUST be sent
# as soon as the transport is ready to send data.
# 
# For servers, the initial value of each client setting is the default
# value.
# 
# For clients using a 1-RTT QUIC connection, the initial value of each
# server setting is the default value.  1-RTT keys will always become
# available prior to the packet containing SETTINGS being processed by
# QUIC, even if the server sends SETTINGS immediately.  Clients SHOULD
# NOT wait indefinitely for SETTINGS to arrive before sending requests,
# but they SHOULD process received datagrams in order to increase the
# likelihood of processing SETTINGS before sending the first request.
# 
# When a 0-RTT QUIC connection is being used, the initial value of each
# server setting is the value used in the previous session.  Clients
# SHOULD store the settings the server provided in the HTTP/3
# connection where resumption information was provided, but they MAY
# opt not to store settings in certain cases (e.g., if the session
# ticket is received before the SETTINGS frame).  A client MUST comply
# with stored settings -- or default values if no values are stored --
# when attempting 0-RTT.  Once a server has provided new settings,
# clients MUST comply with those values.
# 
# A server can remember the settings that it advertised or store an
# integrity-protected copy of the values in the ticket and recover the
# information when accepting 0-RTT data.  A server uses the HTTP/3
# settings values in determining whether to accept 0-RTT data.  If the
# server cannot determine that the settings remembered by a client are
# compatible with its current settings, it MUST NOT accept 0-RTT data.
# Remembered settings are compatible if a client complying with those
# settings would not violate the server's current settings.
# 
# A server MAY accept 0-RTT and subsequently provide different settings
# in its SETTINGS frame.  If 0-RTT data is accepted by the server, its
# SETTINGS frame MUST NOT reduce any limits or alter any values that
# might be violated by the client with its 0-RTT data.  The server MUST
# include all settings that differ from their default values.  If a
# server accepts 0-RTT but then sends settings that are not compatible
# with the previously specified settings, this MUST be treated as a
# connection error of type H3_SETTINGS_ERROR.  If a server accepts
# 0-RTT but then sends a SETTINGS frame that omits a setting value that
# the client understands (apart from reserved setting identifiers) that
# was previously specified to have a non-default value, this MUST be
# treated as a connection error of type H3_SETTINGS_ERROR.

[[spec]]
level = "MUST"
quote = '''
An HTTP implementation MUST NOT send frames or requests that would be
invalid based on its current understanding of the peer's settings.
'''

[[spec]]
level = "SHOULD"
quote = '''
Each endpoint SHOULD use
these initial values to send messages before the peer's SETTINGS
frame has arrived, as packets carrying the settings can be lost or
delayed.
'''

[[spec]]
level = "MUST"
quote = '''
Endpoints MUST NOT require any data to be received from
the peer prior to sending the SETTINGS frame; settings MUST be sent
as soon as the transport is ready to send data.
'''

[[spec]]
level = "MUST"
quote = '''
Endpoints MUST NOT require any data to be received from
the peer prior to sending the SETTINGS frame; settings MUST be sent
as soon as the transport is ready to send data.
'''

[[spec]]
level = "SHOULD"
quote = '''
Clients SHOULD
NOT wait indefinitely for SETTINGS to arrive before sending requests,
but they SHOULD process received datagrams in order to increase the
likelihood of processing SETTINGS before sending the first request.
'''

[[spec]]
level = "SHOULD"
quote = '''
Clients SHOULD
NOT wait indefinitely for SETTINGS to arrive before sending requests,
but they SHOULD process received datagrams in order to increase the
likelihood of processing SETTINGS before sending the first request.
'''

[[spec]]
level = "SHOULD"
quote = '''
Clients
SHOULD store the settings the server provided in the HTTP/3
connection where resumption information was provided, but they MAY
opt not to store settings in certain cases (e.g., if the session
ticket is received before the SETTINGS frame).
'''

[[spec]]
level = "MUST"
quote = '''
A client MUST comply
with stored settings -- or default values if no values are stored --
when attempting 0-RTT.
'''

[[spec]]
level = "MUST"
quote = '''
Once a server has provided new settings,
clients MUST comply with those values.
'''

[[spec]]
level = "MUST"
quote = '''
If the
server cannot determine that the settings remembered by a client are
compatible with its current settings, it MUST NOT accept 0-RTT data.
'''

[[spec]]
level = "MAY"
quote = '''
A server MAY accept 0-RTT and subsequently provide different settings
in its SETTINGS frame.
'''

[[spec]]
level = "MUST"
quote = '''
If 0-RTT data is accepted by the server, its
SETTINGS frame MUST NOT reduce any limits or alter any values that
might be violated by the client with its 0-RTT data.
'''

[[spec]]
level = "MUST"
quote = '''
The server MUST
include all settings that differ from their default values.
'''

[[spec]]
level = "MUST"
quote = '''
If a
server accepts 0-RTT but then sends settings that are not compatible
with the previously specified settings, this MUST be treated as a
connection error of type H3_SETTINGS_ERROR.
'''

[[spec]]
level = "MUST"
quote = '''
If a server accepts
0-RTT but then sends a SETTINGS frame that omits a setting value that
the client understands (apart from reserved setting identifiers) that
was previously specified to have a non-default value, this MUST be
treated as a connection error of type H3_SETTINGS_ERROR.
'''

